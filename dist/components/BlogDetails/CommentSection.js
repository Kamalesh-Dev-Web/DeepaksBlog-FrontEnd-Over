import"/node_modules/core-js/modules/es.array.iterator.js";import"/node_modules/core-js/modules/es.promise.js";import"/node_modules/core-js/modules/web.dom-collections.iterator.js";import React,{useState,useEffect,useRef}from"c:\\node_modules\\react\\index.js";const _ref=document.createElement("link");_ref.rel="stylesheet",_ref.href="/components/BlogDetails/CommentSection.module.css",document.head.appendChild(_ref);const styles={};import{useDispatch}from"c:\\node_modules\\react-redux\\es\\index.js";import{commentPost}from"/actions/post.js";import DeleteIcon from"/node_modules/@material-ui/icons/Delete.js";import Button from"c:\\node_modules\\@material-ui\\core\\esm\\Button\\index.js";import{deleteComment,updateComment}from"/actions/post.js";import EditIcon from"/node_modules/@material-ui/icons/Edit.js";import{styled}from"c:\\node_modules\\@mui\\material\\styles\\index.js";const BootstrapButton=styled(Button)({color:"#454444",padding:"0",marginTop:"0.5em",marginRight:"0.5em",fontSize:"0.5em"}),CommentSection=({post})=>{const dispatch=useDispatch();useRef();const[comments,setComments]=useState(null==post?void 0:post.comments),[comment,setComment]=useState(""),[commentId,setCommentId]=useState(null),[user,setUser]=useState(JSON.parse(localStorage.getItem("profile")));console.log(user.result.email);const toUpdateComment=comments.find(message=>message._id===commentId);return console.log(toUpdateComment),console.log(commentId),console.log(toUpdateComment),useEffect(()=>{toUpdateComment&&setComment(toUpdateComment.comment)},[toUpdateComment]),console.log(comment),console.log(comments),console.log(comments),React.createElement("div",null,React.createElement("div",{className:styles.comment},React.createElement("h3",{style:{fontSize:"1.3em",color:"#454444"}},"Add Comment"),React.createElement("textarea",{className:styles.commentBox,multiline:!0,value:comment,onChange:e=>setComment(e.target.value)}),React.createElement("button",{className:styles.commentButton,onClick:async()=>{if(null===commentId){const arrived=await dispatch(commentPost(post._id,{body:comment}));console.log(arrived),setComment(""),setComment(""),setComments(arrived)}else{await dispatch(updateComment(post._id,commentId,{body:comment}));const objIndex=comments.findIndex(obj=>obj._id===(null==toUpdateComment?void 0:toUpdateComment._id));console.log(objIndex),comments[objIndex].comment=comment;const newComments=[...comments];setComments(newComments),setComment("")}}},"Comment"),React.createElement("h3",null,"Comments"),comments.map(singleComment=>React.createElement("div",{key:singleComment._id,style:{width:"94vw"}},React.createElement("p",{style:{fontSize:"1em",marginTop:"1em",marginBottom:"0.5em",color:"#DEBA3B",fontWeight:"bold",width:"100%"}},singleComment.fromUser.username),React.createElement("div",{style:{background:"#DEBA3B",padding:"0.5em",borderRadius:"5px",width:"96vw",display:"flex",flexDirection:"row"}},React.createElement("p",{style:{width:"90%",wordWrap:"break-word"}},singleComment.comment),React.createElement("div",{style:{display:"flex",flexDirection:"row"}},user.result.email===singleComment.fromUser.email?React.createElement(BootstrapButton,{size:"small",color:"secondary",className:styles.deleteBox,onClick:async()=>{await dispatch(deleteComment(post._id,singleComment._id));let newComment=comments.filter(comment=>comment._id!==singleComment._id);console.log(newComment),setComments(newComment)}},React.createElement(DeleteIcon,{fontSize:"small"})," \xA0 Delete"):null,user.result.email===singleComment.fromUser.email?React.createElement(BootstrapButton,{size:"small",color:"secondary",className:styles.deleteBox,onClick:()=>{setCommentId(singleComment._id)}},React.createElement(EditIcon,{fontSize:"small",className:styles.deleteIcon})," ","\xA0 Edit"):null))))))};export default CommentSection;