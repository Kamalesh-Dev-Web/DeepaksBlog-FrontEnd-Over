import"/node_modules/core-js/modules/es.symbol.description.js";import"/node_modules/core-js/modules/es.array.iterator.js";import"/node_modules/core-js/modules/es.object.assign.js";import"/node_modules/core-js/modules/web.dom-collections.iterator.js";import React,{useState,useEffect}from"c:\\node_modules\\react\\index.js";import Grid from"c:\\node_modules\\@material-ui\\core\\esm\\Grid\\index.js";import TextField from"c:\\node_modules\\@material-ui\\core\\esm\\TextField\\index.js";import{ThemeProvider}from"c:\\node_modules\\@material-ui\\styles\\esm\\index.js";import useStyles from"/components/SuperUser/Form/styles.js";import{theme}from"/components/SuperUser/Form/styles.js";import FileBase from"/node_modules/react-file-base64.js";import{useSelector,useDispatch}from"c:\\node_modules\\react-redux\\es\\index.js";import{useHistory}from"c:\\node_modules\\react-router-dom\\esm\\react-router-dom.js";import{addPost,updatingPost}from"/actions/post.js";const Form=()=>{const classes=useStyles(),dispatch=useDispatch(),history=useHistory(),{currentId}=useSelector(state=>state.user);console.log(currentId);const[postData,setPostData]=useState({body:"",title:"",description:"",tag:"",image:""}),post=useSelector(state=>currentId?state.posts.posts.find(message=>message._id===currentId):null);useEffect(()=>{post&&setPostData(post)},[]);const clear=()=>{setPostData({body:"",title:"",description:"",tag:"",image:""})};return React.createElement("div",{className:classes.root},React.createElement("form",{autoComplete:"off",noValidate:!0,className:`${classes.root} ${classes.form}`,onSubmit:e=>{e.preventDefault(),console.log(postData),0===currentId?(dispatch(addPost(postData,history)),clear()):(dispatch(updatingPost(currentId,postData,history)),clear())}},React.createElement(Grid,{container:!0,spacing:0},React.createElement(Grid,{item:!0,xs:12,sm:6,className:classes.contentContainer},React.createElement("h3",null,"body:"),React.createElement(ThemeProvider,{theme:theme},React.createElement(TextField,{id:"outlined-multiline-static",multiline:!0,rows:4,variant:"outlined",className:classes.textField,value:postData.body,onChange:e=>setPostData(Object.assign({},postData,{body:e.target.value}))}))),React.createElement(Grid,{item:!0,xs:12,sm:6,className:classes.rightContainer},React.createElement("div",{className:classes.titleContainer},React.createElement("h3",null,"title:"),React.createElement(TextField,{id:"outlined-multiline-static",multiline:!0,rows:4,variant:"outlined",className:classes.textFieldTitle,value:postData.title,onChange:e=>setPostData(Object.assign({},postData,{title:e.target.value})),inputProps:{style:{height:"3vh",padding:"0",margin:"0"}}})),React.createElement("div",{className:classes.titleContainer},React.createElement("h3",null,"Description:"),React.createElement(TextField,{id:"outlined-multiline-static",multiline:!0,rows:4,variant:"outlined",className:classes.textFieldDescription,value:postData.description,onChange:e=>setPostData(Object.assign({},postData,{description:e.target.value})),inputProps:{style:{height:"100%",padding:"0",margin:"0"}}})),React.createElement("div",{className:classes.tagContainer},React.createElement("h3",null,"Tag:"),React.createElement(TextField,{id:"outlined-multiline-static",multiline:!0,rows:4,variant:"outlined",className:classes.textFieldTag,value:postData.tag,onChange:e=>{setPostData(Object.assign({},postData,{tag:e.target.value}))},inputProps:{style:{height:"100%",padding:"0",margin:"0"}}})),React.createElement("div",{className:classes.fileInput},React.createElement("h5",null,"Add Image:"),React.createElement(FileBase,{type:"file",multiple:!1,onDone:({base64})=>setPostData(Object.assign({},postData,{image:base64}))})),React.createElement("button",{style:{marginTop:"1.5em",width:"15%",alignSelf:"flex-end",marginRight:"5em",border:"0px",height:"3em",borderRadius:"25px",background:"#454444",color:"#DEBA3B"}},"Submit")))))};export default Form;