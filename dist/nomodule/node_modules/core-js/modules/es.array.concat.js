'use strict';import $ from"/node_modules/core-js/internals/export.js";import fails from"/node_modules/core-js/internals/fails.js";import isArray from"/node_modules/core-js/internals/is-array.js";import isObject from"/node_modules/core-js/internals/is-object.js";import toObject from"/node_modules/core-js/internals/to-object.js";import toLength from"/node_modules/core-js/internals/to-length.js";import createProperty from"/node_modules/core-js/internals/create-property.js";import arraySpeciesCreate from"/node_modules/core-js/internals/array-species-create.js";import arrayMethodHasSpeciesSupport from"/node_modules/core-js/internals/array-method-has-species-support.js";import wellKnownSymbol from"/node_modules/core-js/internals/well-known-symbol.js";import V8_VERSION from"/node_modules/core-js/internals/engine-v8-version.js";var IS_CONCAT_SPREADABLE=wellKnownSymbol("isConcatSpreadable"),MAX_SAFE_INTEGER=9007199254740991,MAXIMUM_ALLOWED_INDEX_EXCEEDED="Maximum allowed index exceeded",IS_CONCAT_SPREADABLE_SUPPORT=51<=V8_VERSION||!fails(function(){var array=[];return array[IS_CONCAT_SPREADABLE]=!1,array.concat()[0]!==array}),SPECIES_SUPPORT=arrayMethodHasSpeciesSupport("concat"),isConcatSpreadable=function isConcatSpreadable(O){if(!isObject(O))return!1;var spreadable=O[IS_CONCAT_SPREADABLE];return spreadable===void 0?isArray(O):!!spreadable},FORCED=!IS_CONCAT_SPREADABLE_SUPPORT||!SPECIES_SUPPORT;$({target:"Array",proto:!0,forced:FORCED},{concat:function concat(arg){var i,k,length,len,E,O=toObject(this),A=arraySpeciesCreate(O,0),n=0;for(i=-1,length=arguments.length;i<length;i++)if(E=-1===i?O:arguments[i],isConcatSpreadable(E)){if(len=toLength(E.length),n+len>MAX_SAFE_INTEGER)throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);for(k=0;k<len;k++,n++)k in E&&createProperty(A,n,E[k])}else{if(n>=MAX_SAFE_INTEGER)throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);createProperty(A,n++,E)}return A.length=n,A}});