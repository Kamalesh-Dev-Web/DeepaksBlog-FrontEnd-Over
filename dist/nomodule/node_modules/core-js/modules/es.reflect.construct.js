import $ from"/node_modules/core-js/internals/export.js";import getBuiltIn from"/node_modules/core-js/internals/get-built-in.js";import aFunction from"/node_modules/core-js/internals/a-function.js";import anObject from"/node_modules/core-js/internals/an-object.js";import isObject from"/node_modules/core-js/internals/is-object.js";import create from"/node_modules/core-js/internals/object-create.js";import bind from"/node_modules/core-js/internals/function-bind.js";import fails from"/node_modules/core-js/internals/fails.js";var nativeConstruct=getBuiltIn("Reflect","construct"),NEW_TARGET_BUG=fails(function(){function F(){}return!(nativeConstruct(function(){},[],F)instanceof F)}),ARGS_BUG=!fails(function(){nativeConstruct(function(){})}),FORCED=NEW_TARGET_BUG||ARGS_BUG;$({target:"Reflect",stat:!0,forced:FORCED,sham:FORCED},{construct:function construct(Target,args){aFunction(Target),anObject(args);var newTarget=3>arguments.length?Target:aFunction(arguments[2]);if(ARGS_BUG&&!NEW_TARGET_BUG)return nativeConstruct(Target,args,newTarget);if(Target==newTarget){switch(args.length){case 0:return new Target;case 1:return new Target(args[0]);case 2:return new Target(args[0],args[1]);case 3:return new Target(args[0],args[1],args[2]);case 4:return new Target(args[0],args[1],args[2],args[3]);}var $args=[null];return $args.push.apply($args,args),new(bind.apply(Target,$args))}var proto=newTarget.prototype,instance=create(isObject(proto)?proto:Object.prototype),result=Function.apply.call(Target,instance,args);return isObject(result)?result:instance}});