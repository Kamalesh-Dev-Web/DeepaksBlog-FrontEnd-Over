'use strict';import _ref2 from"/node_modules/core-js/internals/object-define-property.js";import create from"/node_modules/core-js/internals/object-create.js";import redefineAll from"/node_modules/core-js/internals/redefine-all.js";import bind from"/node_modules/core-js/internals/function-bind-context.js";import anInstance from"/node_modules/core-js/internals/an-instance.js";import iterate from"/node_modules/core-js/internals/iterate.js";import defineIterator from"/node_modules/core-js/internals/define-iterator.js";import setSpecies from"/node_modules/core-js/internals/set-species.js";import DESCRIPTORS from"/node_modules/core-js/internals/descriptors.js";import _ref3 from"/node_modules/core-js/internals/internal-metadata.js";import InternalStateModule from"/node_modules/core-js/internals/internal-state.js";const _ref={exports:{}};(function(module,exports){var defineProperty=_ref2.f,fastKey=_ref3.fastKey,setInternalState=InternalStateModule.set,internalStateGetterFor=InternalStateModule.getterFor;module.exports={getConstructor:function getConstructor(wrapper,CONSTRUCTOR_NAME,IS_MAP,ADDER){var C=wrapper(function(that,iterable){anInstance(that,C,CONSTRUCTOR_NAME),setInternalState(that,{type:CONSTRUCTOR_NAME,index:create(null),first:void 0,last:void 0,size:0}),DESCRIPTORS||(that.size=0),null!=iterable&&iterate(iterable,that[ADDER],{that:that,AS_ENTRIES:IS_MAP})}),getInternalState=internalStateGetterFor(CONSTRUCTOR_NAME),define=function define(that,key,value){var previous,index,state=getInternalState(that),entry=getEntry(that,key);return entry?entry.value=value:(state.last=entry={index:index=fastKey(key,!0),key:key,value:value,previous:previous=state.last,next:void 0,removed:!1},!state.first&&(state.first=entry),previous&&(previous.next=entry),DESCRIPTORS?state.size++:that.size++,"F"!==index&&(state.index[index]=entry)),that},getEntry=function getEntry(that,key){var entry,state=getInternalState(that),index=fastKey(key);if("F"!==index)return state.index[index];for(entry=state.first;entry;entry=entry.next)if(entry.key==key)return entry};return redefineAll(C.prototype,{clear:function clear(){for(var that=this,state=getInternalState(that),data=state.index,entry=state.first;entry;)entry.removed=!0,entry.previous&&(entry.previous=entry.previous.next=void 0),delete data[entry.index],entry=entry.next;state.first=state.last=void 0,DESCRIPTORS?state.size=0:that.size=0},delete:function _delete(key){var that=this,state=getInternalState(that),entry=getEntry(that,key);if(entry){var next=entry.next,prev=entry.previous;delete state.index[entry.index],entry.removed=!0,prev&&(prev.next=next),next&&(next.previous=prev),state.first==entry&&(state.first=next),state.last==entry&&(state.last=prev),DESCRIPTORS?state.size--:that.size--}return!!entry},forEach:function forEach(callbackfn){for(var entry,state=getInternalState(this),boundFunction=bind(callbackfn,1<arguments.length?arguments[1]:void 0,3);entry=entry?entry.next:state.first;)for(boundFunction(entry.value,entry.key,this);entry&&entry.removed;)entry=entry.previous},has:function has(key){return!!getEntry(this,key)}}),redefineAll(C.prototype,IS_MAP?{get:function get(key){var entry=getEntry(this,key);return entry&&entry.value},set:function set(key,value){return define(this,0===key?0:key,value)}}:{add:function add(value){return define(this,value=0===value?0:value,value)}}),DESCRIPTORS&&defineProperty(C.prototype,"size",{get:function get(){return getInternalState(this).size}}),C},setStrong:function setStrong(C,CONSTRUCTOR_NAME,IS_MAP){var ITERATOR_NAME=CONSTRUCTOR_NAME+" Iterator",getInternalCollectionState=internalStateGetterFor(CONSTRUCTOR_NAME),getInternalIteratorState=internalStateGetterFor(ITERATOR_NAME);defineIterator(C,CONSTRUCTOR_NAME,function(iterated,kind){setInternalState(this,{type:ITERATOR_NAME,target:iterated,state:getInternalCollectionState(iterated),kind:kind,last:void 0})},function(){for(var state=getInternalIteratorState(this),kind=state.kind,entry=state.last;entry&&entry.removed;)entry=entry.previous;return state.target&&(state.last=entry=entry?entry.next:state.state.first)?"keys"==kind?{value:entry.key,done:!1}:"values"==kind?{value:entry.value,done:!1}:{value:[entry.key,entry.value],done:!1}:(state.target=void 0,{value:void 0,done:!0})},IS_MAP?"entries":"values",!IS_MAP,!0),setSpecies(CONSTRUCTOR_NAME)}}})(_ref,_ref.exports);export default _ref.exports;