'use strict';import aFunction from"/node_modules/core-js/internals/a-function.js";import isObject from"/node_modules/core-js/internals/is-object.js";const _ref={exports:{}};(function(module,exports){var slice=[].slice,factories={},construct=function construct(C,argsLength,args){if(!(argsLength in factories)){for(var list=[],i=0;i<argsLength;i++)list[i]="a["+i+"]";factories[argsLength]=Function("C,a","return new C("+list.join(",")+")")}return factories[argsLength](C,args)};module.exports=Function.bind||function bind(that){var fn=aFunction(this),partArgs=slice.call(arguments,1),boundFunction=function bound(){var args=partArgs.concat(slice.call(arguments));return this instanceof boundFunction?construct(fn,args.length,args):fn.apply(that,args)};return isObject(fn.prototype)&&(boundFunction.prototype=fn.prototype),boundFunction}})(_ref,_ref.exports);export default _ref.exports;