import"/node_modules/core-js/modules/es.string.match.js";import{ForwardRef,Memo}from"c:\\node_modules\\react-is\\index.js";const fnNameMatchRegex=/^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;export function getFunctionName(fn){const match=`${fn}`.match(fnNameMatchRegex),name=match&&match[1];return name||""}function getFunctionComponentName(Component,fallback=""){return Component.displayName||Component.name||getFunctionName(Component)||fallback}function getWrappedName(outerType,innerType,wrapperName){const functionName=getFunctionComponentName(innerType);return outerType.displayName||(""===functionName?wrapperName:`${wrapperName}(${functionName})`)}export default function getDisplayName(Component){if(null!=Component){if("string"==typeof Component)return Component;if("function"==typeof Component)return getFunctionComponentName(Component,"Component");if("object"==typeof Component)switch(Component.$$typeof){case ForwardRef:return getWrappedName(Component,Component.render,"ForwardRef");case Memo:return getWrappedName(Component,Component.type,"memo");default:return;}}}