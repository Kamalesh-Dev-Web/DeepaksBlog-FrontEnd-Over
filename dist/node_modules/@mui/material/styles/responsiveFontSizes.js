import"/node_modules/core-js/modules/es.array.iterator.js";import"/node_modules/core-js/modules/web.dom-collections.iterator.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import{formatMuiErrorMessage as _formatMuiErrorMessage}from"c:\\node_modules\\@mui\\utils\\esm\\index.js";import{isUnitless,convertLength,responsiveProperty,alignProperty,fontGrid}from"/node_modules/@mui/material/styles/cssUtils.js";export default function responsiveFontSizes(themeInput,options={}){const{breakpoints=["sm","md","lg"],disableAlign=!1,factor=2,variants=["h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","button","overline"]}=options,theme=_extends({},themeInput);theme.typography=_extends({},theme.typography);const typography=theme.typography,convert=convertLength(typography.htmlFontSize),breakpointValues=breakpoints.map(x=>theme.breakpoints.values[x]);return variants.forEach(variant=>{const style=typography[variant],remFontSize=parseFloat(convert(style.fontSize,"rem"));if(1>=remFontSize)return;const maxFontSize=remFontSize;let{lineHeight}=style;if(!isUnitless(lineHeight)&&!disableAlign)throw new Error(_formatMuiErrorMessage(6));isUnitless(lineHeight)||(lineHeight=parseFloat(convert(lineHeight,"rem"))/parseFloat(remFontSize));let transform=null;disableAlign||(transform=value=>alignProperty({size:value,grid:fontGrid({pixels:4,lineHeight,htmlFontSize:typography.htmlFontSize})})),typography[variant]=_extends({},style,responsiveProperty({cssProperty:"fontSize",min:1+(maxFontSize-1)/factor,max:maxFontSize,unit:"rem",breakpoints:breakpointValues,transform}))}),theme}