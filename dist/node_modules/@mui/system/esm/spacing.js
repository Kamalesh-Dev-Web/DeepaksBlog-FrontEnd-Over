import"/node_modules/core-js/modules/es.array.index-of.js";import"/node_modules/core-js/modules/es.array.iterator.js";import"/node_modules/core-js/modules/es.array.reduce.js";import"/node_modules/core-js/modules/es.string.split.js";import"/node_modules/core-js/modules/web.dom-collections.iterator.js";import responsivePropType from"/node_modules/@mui/system/esm/responsivePropType.js";import{handleBreakpoints}from"/node_modules/@mui/system/esm/breakpoints.js";import{getPath}from"/node_modules/@mui/system/esm/style.js";import merge from"/node_modules/@mui/system/esm/merge.js";import memoize from"/node_modules/@mui/system/esm/memoize.js";const properties={m:"margin",p:"padding"},directions={t:"Top",r:"Right",b:"Bottom",l:"Left",x:["Left","Right"],y:["Top","Bottom"]},aliases={marginX:"mx",marginY:"my",paddingX:"px",paddingY:"py"},getCssProperties=memoize(prop=>{if(2<prop.length)if(aliases[prop])prop=aliases[prop];else return[prop];const[a,b]=prop.split(""),property=properties[a],direction=directions[b]||"";return Array.isArray(direction)?direction.map(dir=>property+dir):[property+direction]}),marginKeys=["m","mt","mr","mb","ml","mx","my","margin","marginTop","marginRight","marginBottom","marginLeft","marginX","marginY","marginInline","marginInlineStart","marginInlineEnd","marginBlock","marginBlockStart","marginBlockEnd"],paddingKeys=["p","pt","pr","pb","pl","px","py","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingX","paddingY","paddingInline","paddingInlineStart","paddingInlineEnd","paddingBlock","paddingBlockStart","paddingBlockEnd"],spacingKeys=[...marginKeys,...paddingKeys];export function createUnaryUnit(theme,themeKey,defaultValue,propName){const themeSpacing=getPath(theme,themeKey)||defaultValue;return"number"==typeof themeSpacing?abs=>"string"==typeof abs?abs:themeSpacing*abs:Array.isArray(themeSpacing)?abs=>"string"==typeof abs?abs:themeSpacing[abs]:"function"==typeof themeSpacing?themeSpacing:()=>void 0}export function createUnarySpacing(theme){return createUnaryUnit(theme,"spacing",8,"spacing")}export function getValue(transformer,propValue){if("string"==typeof propValue||null==propValue)return propValue;const abs=Math.abs(propValue),transformed=transformer(abs);return 0<=propValue?transformed:"number"==typeof transformed?-transformed:`-${transformed}`}export function getStyleFromPropValue(cssProperties,transformer){return propValue=>cssProperties.reduce((acc,cssProperty)=>(acc[cssProperty]=getValue(transformer,propValue),acc),{})}function resolveCssProperty(props,keys,prop,transformer){if(-1===keys.indexOf(prop))return null;const cssProperties=getCssProperties(prop),styleFromPropValue=getStyleFromPropValue(cssProperties,transformer),propValue=props[prop];return handleBreakpoints(props,propValue,styleFromPropValue)}function style(props,keys){const transformer=createUnarySpacing(props.theme);return Object.keys(props).map(prop=>resolveCssProperty(props,keys,prop,transformer)).reduce(merge,{})}export function margin(props){return style(props,marginKeys)}margin.propTypes={},margin.filterProps=marginKeys;export function padding(props){return style(props,paddingKeys)}padding.propTypes={},padding.filterProps=paddingKeys;function spacing(props){return style(props,spacingKeys)}spacing.propTypes={},spacing.filterProps=spacingKeys;export default spacing;