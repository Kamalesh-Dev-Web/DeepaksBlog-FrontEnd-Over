import"/node_modules/core-js/modules/es.array.sort.js";import React from"c:\\node_modules\\react\\index.js";import PropTypes from"c:\\node_modules\\prop-types\\index.js";import{exactProp,elementAcceptingRef,unstable_useForkRef as useForkRef,unstable_ownerDocument as ownerDocument}from"c:\\node_modules\\@mui\\utils\\esm\\index.js";import{jsx as _jsx}from"/node_modules/react/jsx-runtime.js";import{jsxs as _jsxs}from"/node_modules/react/jsx-runtime.js";const candidatesSelector=["input","select","textarea","a[href]","button","[tabindex]","audio[controls]","video[controls]","[contenteditable]:not([contenteditable=\"false\"])"].join(",");function getTabIndex(node){const tabindexAttr=parseInt(node.getAttribute("tabindex"),10);return Number.isNaN(tabindexAttr)?"true"===node.contentEditable||("AUDIO"===node.nodeName||"VIDEO"===node.nodeName||"DETAILS"===node.nodeName)&&null===node.getAttribute("tabindex")?0:node.tabIndex:tabindexAttr}function isNonTabbableRadio(node){if("INPUT"!==node.tagName||"radio"!==node.type)return!1;if(!node.name)return!1;const getRadio=selector=>node.ownerDocument.querySelector(`input[type="radio"]${selector}`);let roving=getRadio(`[name="${node.name}"]:checked`);return roving||(roving=getRadio(`[name="${node.name}"]`)),roving!==node}function isNodeMatchingSelectorFocusable(node){return!(node.disabled||"INPUT"===node.tagName&&"hidden"===node.type||isNonTabbableRadio(node))}function defaultGetTabbable(root){const regularTabNodes=[],orderedTabNodes=[];return Array.from(root.querySelectorAll(candidatesSelector)).forEach((node,i)=>{const nodeTabIndex=getTabIndex(node);-1!==nodeTabIndex&&isNodeMatchingSelectorFocusable(node)&&(0===nodeTabIndex?regularTabNodes.push(node):orderedTabNodes.push({documentOrder:i,tabIndex:nodeTabIndex,node}))}),orderedTabNodes.sort((a,b)=>a.tabIndex===b.tabIndex?a.documentOrder-b.documentOrder:a.tabIndex-b.tabIndex).map(a=>a.node).concat(regularTabNodes)}function defaultIsEnabled(){return!0}function Unstable_TrapFocus(props){const{children,disableAutoFocus=!1,disableEnforceFocus=!1,disableRestoreFocus=!1,getTabbable=defaultGetTabbable,isEnabled=defaultIsEnabled,open}=props,ignoreNextEnforceFocus=React.useRef(),sentinelStart=React.useRef(null),sentinelEnd=React.useRef(null),nodeToRestore=React.useRef(null),reactFocusEventTarget=React.useRef(null),activated=React.useRef(!1),rootRef=React.useRef(null),handleRef=useForkRef(children.ref,rootRef),lastKeydown=React.useRef(null);React.useEffect(()=>{open&&rootRef.current&&(activated.current=!disableAutoFocus)},[disableAutoFocus,open]),React.useEffect(()=>{if(open&&rootRef.current){const doc=ownerDocument(rootRef.current);return rootRef.current.contains(doc.activeElement)||(!rootRef.current.hasAttribute("tabIndex")&&rootRef.current.setAttribute("tabIndex",-1),activated.current&&rootRef.current.focus()),()=>{disableRestoreFocus||(nodeToRestore.current&&nodeToRestore.current.focus&&(ignoreNextEnforceFocus.current=!0,nodeToRestore.current.focus()),nodeToRestore.current=null)}}},[open]),React.useEffect(()=>{if(!open||!rootRef.current)return;const doc=ownerDocument(rootRef.current),contain=nativeEvent=>{const{current:rootElement}=rootRef;if(null!==rootElement){if(!doc.hasFocus()||disableEnforceFocus||!isEnabled()||ignoreNextEnforceFocus.current)return void(ignoreNextEnforceFocus.current=!1);if(!rootElement.contains(doc.activeElement)){if(nativeEvent&&reactFocusEventTarget.current!==nativeEvent.target||doc.activeElement!==reactFocusEventTarget.current)reactFocusEventTarget.current=null;else if(null!==reactFocusEventTarget.current)return;if(!activated.current)return;let tabbable=[];if((doc.activeElement===sentinelStart.current||doc.activeElement===sentinelEnd.current)&&(tabbable=getTabbable(rootRef.current)),0<tabbable.length){var _lastKeydown$current,_lastKeydown$current2;const isShiftTab=!!((null==(_lastKeydown$current=lastKeydown.current)?void 0:_lastKeydown$current.shiftKey)&&"Tab"===(null==(_lastKeydown$current2=lastKeydown.current)?void 0:_lastKeydown$current2.key)),focusNext=tabbable[0],focusPrevious=tabbable[tabbable.length-1];isShiftTab?focusPrevious.focus():focusNext.focus()}else rootElement.focus()}}},loopFocus=nativeEvent=>{lastKeydown.current=nativeEvent;disableEnforceFocus||!isEnabled()||"Tab"!==nativeEvent.key||doc.activeElement===rootRef.current&&nativeEvent.shiftKey&&(ignoreNextEnforceFocus.current=!0,sentinelEnd.current.focus())};doc.addEventListener("focusin",contain),doc.addEventListener("keydown",loopFocus,!0);const interval=setInterval(()=>{"BODY"===doc.activeElement.tagName&&contain()},50);return()=>{clearInterval(interval),doc.removeEventListener("focusin",contain),doc.removeEventListener("keydown",loopFocus,!0)}},[disableAutoFocus,disableEnforceFocus,disableRestoreFocus,isEnabled,open,getTabbable]);const handleFocusSentinel=event=>{null===nodeToRestore.current&&(nodeToRestore.current=event.relatedTarget),activated.current=!0};return _jsxs(React.Fragment,{children:[_jsx("div",{tabIndex:0,onFocus:handleFocusSentinel,ref:sentinelStart,"data-test":"sentinelStart"}),React.cloneElement(children,{ref:handleRef,onFocus:event=>{null===nodeToRestore.current&&(nodeToRestore.current=event.relatedTarget),activated.current=!0,reactFocusEventTarget.current=event.target;const childrenPropsHandler=children.props.onFocus;childrenPropsHandler&&childrenPropsHandler(event)}}),_jsx("div",{tabIndex:0,onFocus:handleFocusSentinel,ref:sentinelEnd,"data-test":"sentinelEnd"})]})}void 0;export default Unstable_TrapFocus;