import"/node_modules/core-js/modules/es.array.index-of.js";import"/node_modules/core-js/modules/es.array.iterator.js";import"/node_modules/core-js/modules/es.array.reduce.js";import"/node_modules/core-js/modules/es.array.slice.js";import"/node_modules/core-js/modules/es.array.splice.js";import"/node_modules/core-js/modules/es.string.replace.js";import"/node_modules/core-js/modules/es.string.trim.js";import"/node_modules/core-js/modules/esnext.map.delete-all.js";import"/node_modules/core-js/modules/esnext.map.every.js";import"/node_modules/core-js/modules/esnext.map.filter.js";import"/node_modules/core-js/modules/esnext.map.find.js";import"/node_modules/core-js/modules/esnext.map.find-key.js";import"/node_modules/core-js/modules/esnext.map.includes.js";import"/node_modules/core-js/modules/esnext.map.key-of.js";import"/node_modules/core-js/modules/esnext.map.map-keys.js";import"/node_modules/core-js/modules/esnext.map.map-values.js";import"/node_modules/core-js/modules/esnext.map.merge.js";import"/node_modules/core-js/modules/esnext.map.reduce.js";import"/node_modules/core-js/modules/esnext.map.some.js";import"/node_modules/core-js/modules/esnext.map.update.js";import"/node_modules/core-js/modules/web.dom-collections.iterator.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import React from"c:\\node_modules\\react\\index.js";import{unstable_setRef as setRef,unstable_useEventCallback as useEventCallback,unstable_useControlled as useControlled,unstable_useId as useId}from"c:\\node_modules\\@mui\\utils\\esm\\index.js";function stripDiacritics(string){return"undefined"==typeof string.normalize?string:string.normalize("NFD").replace(/[\u0300-\u036f]/g,"")}export function createFilterOptions(config={}){const{ignoreAccents=!0,ignoreCase=!0,limit,matchFrom="any",stringify,trim=!1}=config;return(options,{inputValue,getOptionLabel})=>{let input=trim?inputValue.trim():inputValue;ignoreCase&&(input=input.toLowerCase()),ignoreAccents&&(input=stripDiacritics(input));const filteredOptions=options.filter(option=>{let candidate=(stringify||getOptionLabel)(option);return ignoreCase&&(candidate=candidate.toLowerCase()),ignoreAccents&&(candidate=stripDiacritics(candidate)),"start"===matchFrom?0===candidate.indexOf(input):-1<candidate.indexOf(input)});return"number"==typeof limit?filteredOptions.slice(0,limit):filteredOptions}}function findIndex(array,comp){for(let i=0;i<array.length;i+=1)if(comp(array[i]))return i;return-1}const defaultFilterOptions=createFilterOptions(),pageSize=5;export default function useAutocomplete(props){function validOptionIndex(index,direction){if(!listboxRef.current||-1===index)return-1;for(let nextFocus=index;!0;){if("next"===direction&&nextFocus===filteredOptions.length||"previous"===direction&&-1===nextFocus)return-1;const option=listboxRef.current.querySelector(`[data-option-index="${nextFocus}"]`),nextFocusDisabled=!disabledItemsFocusable&&(!option||option.disabled||"true"===option.getAttribute("aria-disabled"));if(option&&!option.hasAttribute("tabindex")||nextFocusDisabled)nextFocus+="next"===direction?1:-1;else return nextFocus}}function validTagIndex(index,direction){if(-1===index)return-1;for(let nextFocus=index;!0;){if("next"===direction&&nextFocus===value.length||"previous"===direction&&-1===nextFocus)return-1;const option=anchorEl.querySelector(`[data-tag-index="${nextFocus}"]`);if(!option||!option.hasAttribute("tabindex")||option.disabled||"true"===option.getAttribute("aria-disabled"))nextFocus+="next"===direction?1:-1;else return nextFocus}}const{autoComplete=!1,autoHighlight=!1,autoSelect=!1,blurOnSelect=!1,disabled:disabledProp,clearOnBlur=!props.freeSolo,clearOnEscape=!1,componentName="useAutocomplete",defaultValue=props.multiple?[]:null,disableClearable=!1,disableCloseOnSelect=!1,disabledItemsFocusable=!1,disableListWrap=!1,filterOptions=defaultFilterOptions,filterSelectedOptions=!1,freeSolo=!1,getOptionDisabled,getOptionLabel:getOptionLabelProp=option=>{var _option$label;return null==(_option$label=option.label)?option:_option$label},isOptionEqualToValue=(option,value)=>option===value,groupBy,handleHomeEndKeys=!props.freeSolo,id:idProp,includeInputInList=!1,inputValue:inputValueProp,multiple=!1,onChange,onClose,onHighlightChange,onInputChange,onOpen,open:openProp,openOnFocus=!1,options,selectOnFocus=!props.freeSolo,value:valueProp}=props,id=useId(idProp);let getOptionLabel=getOptionLabelProp;getOptionLabel=option=>{const optionLabel=getOptionLabelProp(option);return"string"==typeof optionLabel?optionLabel:optionLabel+""};const ignoreFocus=React.useRef(!1),firstFocus=React.useRef(!0),inputRef=React.useRef(null),listboxRef=React.useRef(null),[anchorEl,setAnchorEl]=React.useState(null),[focusedTag,setFocusedTag]=React.useState(-1),defaultHighlighted=autoHighlight?0:-1,highlightedIndexRef=React.useRef(defaultHighlighted),[value,setValueState]=useControlled({controlled:valueProp,default:defaultValue,name:componentName}),[inputValue,setInputValueState]=useControlled({controlled:inputValueProp,default:"",name:componentName,state:"inputValue"}),[focused,setFocused]=React.useState(!1),resetInputValue=React.useCallback((event,newValue)=>{let newInputValue;if(multiple)newInputValue="";else if(null==newValue)newInputValue="";else{const optionLabel=getOptionLabel(newValue);newInputValue="string"==typeof optionLabel?optionLabel:""}inputValue===newInputValue||(setInputValueState(newInputValue),onInputChange&&onInputChange(event,newInputValue,"reset"))},[getOptionLabel,inputValue,multiple,onInputChange,setInputValueState]),prevValue=React.useRef();React.useEffect(()=>{const valueChange=value!==prevValue.current;prevValue.current=value,focused&&!valueChange||freeSolo&&!valueChange||resetInputValue(null,value)},[value,resetInputValue,focused,prevValue,freeSolo]);const[open,setOpenState]=useControlled({controlled:openProp,default:!1,name:componentName,state:"open"}),[inputPristine,setInputPristine]=React.useState(!0),inputValueIsSelectedValue=!multiple&&null!=value&&inputValue===getOptionLabel(value),popupOpen=open,filteredOptions=popupOpen?filterOptions(options.filter(option=>!(filterSelectedOptions&&(multiple?value:[value]).some(value2=>null!==value2&&isOptionEqualToValue(option,value2)))),{inputValue:inputValueIsSelectedValue&&inputPristine?"":inputValue,getOptionLabel}):[],listboxAvailable=open&&0<filteredOptions.length,focusTag=useEventCallback(tagToFocus=>{-1===tagToFocus?inputRef.current.focus():anchorEl.querySelector(`[data-tag-index="${tagToFocus}"]`).focus()});React.useEffect(()=>{multiple&&focusedTag>value.length-1&&(setFocusedTag(-1),focusTag(-1))},[value,multiple,focusedTag,focusTag]);const setHighlightedIndex=useEventCallback(({event,index,reason:_reason="auto"})=>{if(highlightedIndexRef.current=index,-1===index?inputRef.current.removeAttribute("aria-activedescendant"):inputRef.current.setAttribute("aria-activedescendant",`${id}-option-${index}`),onHighlightChange&&onHighlightChange(event,-1===index?null:filteredOptions[index],_reason),!!listboxRef.current){const prev=listboxRef.current.querySelector("[role=\"option\"].Mui-focused");prev&&(prev.classList.remove("Mui-focused"),prev.classList.remove("Mui-focusVisible"));const listboxNode=listboxRef.current.parentElement.querySelector("[role=\"listbox\"]");if(listboxNode){if(-1===index)return void(listboxNode.scrollTop=0);const option=listboxRef.current.querySelector(`[data-option-index="${index}"]`);if(option&&(option.classList.add("Mui-focused"),"keyboard"===_reason&&option.classList.add("Mui-focusVisible"),listboxNode.scrollHeight>listboxNode.clientHeight&&"mouse"!==_reason)){const element=option,scrollBottom=listboxNode.clientHeight+listboxNode.scrollTop,elementBottom=element.offsetTop+element.offsetHeight;elementBottom>scrollBottom?listboxNode.scrollTop=elementBottom-listboxNode.clientHeight:element.offsetTop-element.offsetHeight*(groupBy?1.3:0)<listboxNode.scrollTop&&(listboxNode.scrollTop=element.offsetTop-element.offsetHeight*(groupBy?1.3:0))}}}}),changeHighlightedIndex=useEventCallback(({event,diff,direction:_direction2="next",reason:_reason2="auto"})=>{if(popupOpen){const nextIndex=validOptionIndex((()=>{const maxIndex=filteredOptions.length-1;if("reset"===diff)return defaultHighlighted;if("start"===diff)return 0;if("end"===diff)return maxIndex;const newIndex=highlightedIndexRef.current+diff;return 0>newIndex?-1===newIndex&&includeInputInList?-1:disableListWrap&&-1!==highlightedIndexRef.current||1<Math.abs(diff)?0:maxIndex:newIndex>maxIndex?newIndex===maxIndex+1&&includeInputInList?-1:disableListWrap||1<Math.abs(diff)?maxIndex:0:newIndex})(),_direction2);if(setHighlightedIndex({index:nextIndex,reason:_reason2,event}),autoComplete&&"reset"!==diff)if(-1===nextIndex)inputRef.current.value=inputValue;else{const option=getOptionLabel(filteredOptions[nextIndex]);inputRef.current.value=option;const index=option.toLowerCase().indexOf(inputValue.toLowerCase());0===index&&0<inputValue.length&&inputRef.current.setSelectionRange(inputValue.length,option.length)}}}),syncHighlightedIndex=React.useCallback(()=>{if(!popupOpen)return;const valueItem=multiple?value[0]:value;if(0===filteredOptions.length||null==valueItem)return void changeHighlightedIndex({diff:"reset"});if(listboxRef.current){if(null!=valueItem){const currentOption=filteredOptions[highlightedIndexRef.current];if(multiple&&currentOption&&-1!==findIndex(value,val=>isOptionEqualToValue(currentOption,val)))return;const itemIndex=findIndex(filteredOptions,optionItem=>isOptionEqualToValue(optionItem,valueItem));return void(-1===itemIndex?changeHighlightedIndex({diff:"reset"}):setHighlightedIndex({index:itemIndex}))}return highlightedIndexRef.current>=filteredOptions.length-1?void setHighlightedIndex({index:filteredOptions.length-1}):void setHighlightedIndex({index:highlightedIndexRef.current})}},[filteredOptions.length,!multiple&&value,filterSelectedOptions,changeHighlightedIndex,setHighlightedIndex,popupOpen,inputValue,multiple]),handleListboxRef=useEventCallback(node=>{setRef(listboxRef,node),node&&syncHighlightedIndex()});React.useEffect(()=>{syncHighlightedIndex()},[syncHighlightedIndex]);const handleOpen=event=>{open||(setOpenState(!0),setInputPristine(!0),onOpen&&onOpen(event))},handleClose=(event,reason)=>{open&&(setOpenState(!1),onClose&&onClose(event,reason))},handleValue=(event,newValue,reason,details)=>{value===newValue||(onChange&&onChange(event,newValue,reason,details),setValueState(newValue))},isTouch=React.useRef(!1),selectNewValue=(event,option,reasonProp="selectOption",origin="options")=>{let reason=reasonProp,newValue=option;if(multiple){newValue=Array.isArray(value)?value.slice():[];const itemIndex=findIndex(newValue,valueItem=>isOptionEqualToValue(option,valueItem));-1===itemIndex?newValue.push(option):"freeSolo"!==origin&&(newValue.splice(itemIndex,1),reason="removeOption")}resetInputValue(event,newValue),handleValue(event,newValue,reason,{option}),disableCloseOnSelect||event.ctrlKey||event.metaKey||handleClose(event,reason),(!0===blurOnSelect||"touch"===blurOnSelect&&isTouch.current||"mouse"===blurOnSelect&&!isTouch.current)&&inputRef.current.blur()},handleFocusTag=(event,direction)=>{if(!multiple)return;handleClose(event,"toggleInput");let nextTag=focusedTag;-1===focusedTag?""===inputValue&&"previous"===direction&&(nextTag=value.length-1):(nextTag+="next"===direction?1:-1,0>nextTag&&(nextTag=0),nextTag===value.length&&(nextTag=-1)),nextTag=validTagIndex(nextTag,direction),setFocusedTag(nextTag),focusTag(nextTag)},handleClear=event=>{ignoreFocus.current=!0,setInputValueState(""),onInputChange&&onInputChange(event,"","clear"),handleValue(event,multiple?[]:null,"clear")},handleKeyDown=other=>event=>{if((other.onKeyDown&&other.onKeyDown(event),!event.defaultMuiPrevented)&&(-1!==focusedTag&&-1===["ArrowLeft","ArrowRight"].indexOf(event.key)&&(setFocusedTag(-1),focusTag(-1)),229!==event.which))switch(event.key){case"Home":popupOpen&&handleHomeEndKeys&&(event.preventDefault(),changeHighlightedIndex({diff:"start",direction:"next",reason:"keyboard",event}));break;case"End":popupOpen&&handleHomeEndKeys&&(event.preventDefault(),changeHighlightedIndex({diff:"end",direction:"previous",reason:"keyboard",event}));break;case"PageUp":event.preventDefault(),changeHighlightedIndex({diff:-pageSize,direction:"previous",reason:"keyboard",event}),handleOpen(event);break;case"PageDown":event.preventDefault(),changeHighlightedIndex({diff:pageSize,direction:"next",reason:"keyboard",event}),handleOpen(event);break;case"ArrowDown":event.preventDefault(),changeHighlightedIndex({diff:1,direction:"next",reason:"keyboard",event}),handleOpen(event);break;case"ArrowUp":event.preventDefault(),changeHighlightedIndex({diff:-1,direction:"previous",reason:"keyboard",event}),handleOpen(event);break;case"ArrowLeft":handleFocusTag(event,"previous");break;case"ArrowRight":handleFocusTag(event,"next");break;case"Enter":if(-1!==highlightedIndexRef.current&&popupOpen){const option=filteredOptions[highlightedIndexRef.current],disabled=!!getOptionDisabled&&getOptionDisabled(option);if(event.preventDefault(),disabled)return;selectNewValue(event,option,"selectOption"),autoComplete&&inputRef.current.setSelectionRange(inputRef.current.value.length,inputRef.current.value.length)}else freeSolo&&""!==inputValue&&!1===inputValueIsSelectedValue&&(multiple&&event.preventDefault(),selectNewValue(event,inputValue,"createOption","freeSolo"));break;case"Escape":popupOpen?(event.preventDefault(),event.stopPropagation(),handleClose(event,"escape")):clearOnEscape&&(""!==inputValue||multiple&&0<value.length)&&(event.preventDefault(),event.stopPropagation(),handleClear(event));break;case"Backspace":if(multiple&&""===inputValue&&0<value.length){const index=-1===focusedTag?value.length-1:focusedTag,newValue=value.slice();newValue.splice(index,1),handleValue(event,newValue,"removeOption",{option:value[index]})}break;default:}},handleFocus=event=>{setFocused(!0),openOnFocus&&!ignoreFocus.current&&handleOpen(event)},handleBlur=event=>null!==listboxRef.current&&listboxRef.current.parentElement.contains(document.activeElement)?void inputRef.current.focus():void(setFocused(!1),firstFocus.current=!0,ignoreFocus.current=!1,autoSelect&&-1!==highlightedIndexRef.current&&popupOpen?selectNewValue(event,filteredOptions[highlightedIndexRef.current],"blur"):autoSelect&&freeSolo&&""!==inputValue?selectNewValue(event,inputValue,"blur","freeSolo"):clearOnBlur&&resetInputValue(event,value),handleClose(event,"blur")),handleInputChange=event=>{const newValue=event.target.value;inputValue!==newValue&&(setInputValueState(newValue),setInputPristine(!1),onInputChange&&onInputChange(event,newValue,"input")),""===newValue?!disableClearable&&!multiple&&handleValue(event,null,"clear"):handleOpen(event)},handleOptionMouseOver=event=>{setHighlightedIndex({event,index:+event.currentTarget.getAttribute("data-option-index"),reason:"mouse"})},handleOptionTouchStart=()=>{isTouch.current=!0},handleOptionClick=event=>{const index=+event.currentTarget.getAttribute("data-option-index");selectNewValue(event,filteredOptions[index],"selectOption"),isTouch.current=!1},handleTagDelete=index=>event=>{const newValue=value.slice();newValue.splice(index,1),handleValue(event,newValue,"removeOption",{option:value[index]})},handlePopupIndicator=event=>{open?handleClose(event,"toggleInput"):handleOpen(event)},handleMouseDown=event=>{event.target.getAttribute("id")!==id&&event.preventDefault()},handleClick=()=>{inputRef.current.focus(),selectOnFocus&&firstFocus.current&&0==inputRef.current.selectionEnd-inputRef.current.selectionStart&&inputRef.current.select(),firstFocus.current=!1},handleInputMouseDown=event=>{""!==inputValue&&open||handlePopupIndicator(event)};let dirty=freeSolo&&0<inputValue.length;dirty=dirty||(multiple?0<value.length:null!==value);let groupedOptions=filteredOptions;return groupBy&&(new Map,groupedOptions=filteredOptions.reduce((acc,option,index)=>{const group=groupBy(option);return 0<acc.length&&acc[acc.length-1].group===group?acc[acc.length-1].options.push(option):acc.push({key:index,index,group,options:[option]}),acc},[])),disabledProp&&focused&&handleBlur(),{getRootProps:(other={})=>_extends({"aria-owns":listboxAvailable?`${id}-listbox`:null,role:"combobox","aria-expanded":listboxAvailable},other,{onKeyDown:handleKeyDown(other),onMouseDown:handleMouseDown,onClick:handleClick}),getInputLabelProps:()=>({id:`${id}-label`,htmlFor:id}),getInputProps:()=>({id,value:inputValue,onBlur:handleBlur,onFocus:handleFocus,onChange:handleInputChange,onMouseDown:handleInputMouseDown,"aria-activedescendant":popupOpen?"":null,"aria-autocomplete":autoComplete?"both":"list","aria-controls":listboxAvailable?`${id}-listbox`:null,autoComplete:"off",ref:inputRef,autoCapitalize:"none",spellCheck:"false"}),getClearProps:()=>({tabIndex:-1,onClick:handleClear}),getPopupIndicatorProps:()=>({tabIndex:-1,onClick:handlePopupIndicator}),getTagProps:({index})=>({key:index,"data-tag-index":index,tabIndex:-1,onDelete:handleTagDelete(index)}),getListboxProps:()=>({role:"listbox",id:`${id}-listbox`,"aria-labelledby":`${id}-label`,ref:handleListboxRef,onMouseDown:event=>{event.preventDefault()}}),getOptionProps:({index,option})=>{const selected=(multiple?value:[value]).some(value2=>null!=value2&&isOptionEqualToValue(option,value2)),disabled=!!getOptionDisabled&&getOptionDisabled(option);return{key:getOptionLabel(option),tabIndex:-1,role:"option",id:`${id}-option-${index}`,onMouseOver:handleOptionMouseOver,onClick:handleOptionClick,onTouchStart:handleOptionTouchStart,"data-option-index":index,"aria-disabled":disabled,"aria-selected":selected}},id,inputValue,value,dirty,popupOpen,focused:focused||-1!==focusedTag,anchorEl,setAnchorEl,focusedTag,groupedOptions}}