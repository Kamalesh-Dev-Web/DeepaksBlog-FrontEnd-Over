import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import React from"c:\\node_modules\\react\\index.js";import PropTypes from"c:\\node_modules\\prop-types\\index.js";import{exactProp}from"c:\\node_modules\\@mui\\utils\\esm\\index.js";import ThemeContext from"/node_modules/@mui/private-theming/useTheme/ThemeContext.js";import useTheme from"c:\\node_modules\\@mui\\private-theming\\useTheme\\index.js";import nested from"/node_modules/@mui/private-theming/ThemeProvider/nested.js";import{jsx as _jsx}from"/node_modules/react/jsx-runtime.js";function mergeOuterLocalTheme(outerTheme,localTheme){if("function"==typeof localTheme){const mergedTheme=localTheme(outerTheme);return mergedTheme}return _extends({},outerTheme,localTheme)}function ThemeProvider(props){const{children,theme:localTheme}=props,outerTheme=useTheme(),theme=React.useMemo(()=>{const output=null===outerTheme?localTheme:mergeOuterLocalTheme(outerTheme,localTheme);return null!=output&&(output[nested]=null!==outerTheme),output},[localTheme,outerTheme]);return _jsx(ThemeContext.Provider,{value:theme,children:children})}void 0;export default ThemeProvider;