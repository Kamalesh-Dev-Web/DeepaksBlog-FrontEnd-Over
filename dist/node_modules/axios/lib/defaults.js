'use strict';import"/node_modules/core-js/modules/es.regexp.to-string.js";import process from"/node_modules/process/browser.js";import utils from"/node_modules/axios/lib/utils.js";import normalizeHeaderName from"/node_modules/axios/lib/helpers/normalizeHeaderName.js";import _ref2 from"/node_modules/axios/lib/adapters/xhr.js";import _ref3 from"/node_modules/axios/lib/adapters/http.js";const _ref={exports:{}};(function(module,exports){function setContentTypeIfUnset(headers,value){!utils.isUndefined(headers)&&utils.isUndefined(headers["Content-Type"])&&(headers["Content-Type"]=value)}function getDefaultAdapter(){var adapter;return"undefined"==typeof XMLHttpRequest?"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process)&&(adapter=_ref3):adapter=_ref2,adapter}var DEFAULT_CONTENT_TYPE={"Content-Type":"application/x-www-form-urlencoded"},defaults={adapter:getDefaultAdapter(),transformRequest:[function transformRequest(data,headers){return normalizeHeaderName(headers,"Accept"),normalizeHeaderName(headers,"Content-Type"),utils.isFormData(data)||utils.isArrayBuffer(data)||utils.isBuffer(data)||utils.isStream(data)||utils.isFile(data)||utils.isBlob(data)?data:utils.isArrayBufferView(data)?data.buffer:utils.isURLSearchParams(data)?(setContentTypeIfUnset(headers,"application/x-www-form-urlencoded;charset=utf-8"),data.toString()):utils.isObject(data)?(setContentTypeIfUnset(headers,"application/json;charset=utf-8"),JSON.stringify(data)):data}],transformResponse:[function transformResponse(data){if("string"==typeof data)try{data=JSON.parse(data)}catch(e){}return data}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function validateStatus(status){return 200<=status&&300>status}};defaults.headers={common:{Accept:"application/json, text/plain, */*"}},utils.forEach(["delete","get","head"],function forEachMethodNoData(method){defaults.headers[method]={}}),utils.forEach(["post","put","patch"],function forEachMethodWithData(method){defaults.headers[method]=utils.merge(DEFAULT_CONTENT_TYPE)}),module.exports=defaults})(_ref,_ref.exports);export default _ref.exports;