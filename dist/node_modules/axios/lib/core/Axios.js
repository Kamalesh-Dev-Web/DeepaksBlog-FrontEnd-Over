'use strict';import"/node_modules/core-js/modules/es.promise.js";import"/node_modules/core-js/modules/es.string.replace.js";import utils from"/node_modules/axios/lib/utils.js";import buildURL from"/node_modules/axios/lib/helpers/buildURL.js";import InterceptorManager from"/node_modules/axios/lib/core/InterceptorManager.js";import dispatchRequest from"/node_modules/axios/lib/core/dispatchRequest.js";import mergeConfig from"/node_modules/axios/lib/core/mergeConfig.js";const _ref={exports:{}};(function(module,exports){function Axios(instanceConfig){this.defaults=instanceConfig,this.interceptors={request:new InterceptorManager,response:new InterceptorManager}}Axios.prototype.request=function request(config){"string"==typeof config?(config=arguments[1]||{},config.url=arguments[0]):config=config||{},config=mergeConfig(this.defaults,config),config.method=config.method?config.method.toLowerCase():this.defaults.method?this.defaults.method.toLowerCase():"get";var chain=[dispatchRequest,void 0],promise=Promise.resolve(config);for(this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor){chain.unshift(interceptor.fulfilled,interceptor.rejected)}),this.interceptors.response.forEach(function pushResponseInterceptors(interceptor){chain.push(interceptor.fulfilled,interceptor.rejected)});chain.length;)promise=promise.then(chain.shift(),chain.shift());return promise},Axios.prototype.getUri=function getUri(config){return config=mergeConfig(this.defaults,config),buildURL(config.url,config.params,config.paramsSerializer).replace(/^\?/,"")},utils.forEach(["delete","get","head","options"],function forEachMethodNoData(method){Axios.prototype[method]=function(url,config){return this.request(mergeConfig(config||{},{method:method,url:url,data:(config||{}).data}))}}),utils.forEach(["post","put","patch"],function forEachMethodWithData(method){Axios.prototype[method]=function(url,data,config){return this.request(mergeConfig(config||{},{method:method,url:url,data:data}))}}),module.exports=Axios})(_ref,_ref.exports);export default _ref.exports;