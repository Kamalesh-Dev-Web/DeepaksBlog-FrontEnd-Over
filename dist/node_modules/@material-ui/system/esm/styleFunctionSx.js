import"/node_modules/core-js/modules/es.array.index-of.js";import _toConsumableArray from"/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import PropTypes from"c:\\node_modules\\prop-types\\index.js";import{chainPropTypes}from"c:\\node_modules\\@material-ui\\utils\\esm\\index.js";import merge from"/node_modules/@material-ui/system/esm/merge.js";function omit(input,fields){var output={};return Object.keys(input).forEach(function(prop){-1===fields.indexOf(prop)&&(output[prop]=input[prop])}),output}var warnedOnce=!1;function styleFunctionSx(styleFunction){var newStyleFunction=function newStyleFunction(props){var output=styleFunction(props);return props.css?_extends({},merge(output,styleFunction(_extends({theme:props.theme},props.css))),omit(props.css,[styleFunction.filterProps])):props.sx?_extends({},merge(output,styleFunction(_extends({theme:props.theme},props.sx))),omit(props.sx,[styleFunction.filterProps])):output};return newStyleFunction.propTypes={},newStyleFunction.filterProps=["css","sx"].concat(_toConsumableArray(styleFunction.filterProps)),newStyleFunction}export function css(styleFunction){return styleFunctionSx(styleFunction)}export default styleFunctionSx;