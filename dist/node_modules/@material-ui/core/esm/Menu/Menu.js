import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _objectWithoutProperties from"/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js";import React from"c:\\node_modules\\react\\index.js";import{isFragment}from"c:\\node_modules\\react-is\\index.js";import PropTypes from"c:\\node_modules\\prop-types\\index.js";import clsx from"c:\\node_modules\\clsx\\dist\\clsx.m.js";import{HTMLElementType}from"c:\\node_modules\\@material-ui\\utils\\esm\\index.js";import withStyles from"/node_modules/@material-ui/core/esm/styles/withStyles.js";import Popover from"c:\\node_modules\\@material-ui\\core\\esm\\Popover\\index.js";import MenuList from"c:\\node_modules\\@material-ui\\core\\esm\\MenuList\\index.js";import ReactDOM from"c:\\node_modules\\react-dom\\index.js";import setRef from"/node_modules/@material-ui/core/esm/utils/setRef.js";import useTheme from"/node_modules/@material-ui/core/esm/styles/useTheme.js";import deprecatedPropType from"/node_modules/@material-ui/core/esm/utils/deprecatedPropType.js";var RTL_ORIGIN={vertical:"top",horizontal:"right"},LTR_ORIGIN={vertical:"top",horizontal:"left"};export var styles={paper:{maxHeight:"calc(100% - 96px)",WebkitOverflowScrolling:"touch"},list:{outline:0}};var Menu=React.forwardRef(function Menu(props,ref){var _props$autoFocus=props.autoFocus,autoFocus=!(void 0!==_props$autoFocus)||_props$autoFocus,children=props.children,classes=props.classes,_props$disableAutoFoc=props.disableAutoFocusItem,disableAutoFocusItem=void 0!==_props$disableAutoFoc&&_props$disableAutoFoc,_props$MenuListProps=props.MenuListProps,MenuListProps=void 0===_props$MenuListProps?{}:_props$MenuListProps,onClose=props.onClose,onEnteringProp=props.onEntering,open=props.open,_props$PaperProps=props.PaperProps,PaperProps=void 0===_props$PaperProps?{}:_props$PaperProps,PopoverClasses=props.PopoverClasses,_props$transitionDura=props.transitionDuration,transitionDuration=void 0===_props$transitionDura?"auto":_props$transitionDura,_props$TransitionProp=props.TransitionProps;_props$TransitionProp=void 0===_props$TransitionProp?{}:_props$TransitionProp;var onEntering=_props$TransitionProp.onEntering,TransitionProps=_objectWithoutProperties(_props$TransitionProp,["onEntering"]),_props$variant=props.variant,variant=void 0===_props$variant?"selectedMenu":_props$variant,other=_objectWithoutProperties(props,["autoFocus","children","classes","disableAutoFocusItem","MenuListProps","onClose","onEntering","open","PaperProps","PopoverClasses","transitionDuration","TransitionProps","variant"]),theme=useTheme(),menuListActionsRef=React.useRef(null),contentAnchorRef=React.useRef(null),activeItemIndex=-1;React.Children.map(children,function(child,index){React.isValidElement(child)&&(child.props.disabled||("menu"!==variant&&child.props.selected?activeItemIndex=index:-1===activeItemIndex&&(activeItemIndex=index)))});var items=React.Children.map(children,function(child,index){return index===activeItemIndex?React.cloneElement(child,{ref:function ref(instance){contentAnchorRef.current=ReactDOM.findDOMNode(instance),setRef(child.ref,instance)}}):child});return React.createElement(Popover,_extends({getContentAnchorEl:function getContentAnchorEl(){return contentAnchorRef.current},classes:PopoverClasses,onClose:onClose,TransitionProps:_extends({onEntering:function handleEntering(element,isAppearing){menuListActionsRef.current&&menuListActionsRef.current.adjustStyleForScrollbar(element,theme),onEnteringProp&&onEnteringProp(element,isAppearing),onEntering&&onEntering(element,isAppearing)}},TransitionProps),anchorOrigin:"rtl"===theme.direction?RTL_ORIGIN:LTR_ORIGIN,transformOrigin:"rtl"===theme.direction?RTL_ORIGIN:LTR_ORIGIN,PaperProps:_extends({},PaperProps,{classes:_extends({},PaperProps.classes,{root:classes.paper})}),open:open,ref:ref,transitionDuration:transitionDuration},other),React.createElement(MenuList,_extends({onKeyDown:function handleListKeyDown(event){"Tab"===event.key&&(event.preventDefault(),onClose&&onClose(event,"tabKeyDown"))},actions:menuListActionsRef,autoFocus:autoFocus&&(-1===activeItemIndex||disableAutoFocusItem),autoFocusItem:autoFocus&&!disableAutoFocusItem&&open,variant:variant},MenuListProps,{className:clsx(classes.list,MenuListProps.className)}),items))});void 0;export default withStyles(styles,{name:"MuiMenu"})(Menu);