import"/node_modules/core-js/modules/es.array.index-of.js";import"/node_modules/core-js/modules/es.array.slice.js";import"/node_modules/core-js/modules/es.array.splice.js";import"/node_modules/core-js/modules/es.string.trim.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";import _objectWithoutProperties from"/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js";import _typeof from"/node_modules/@babel/runtime/helpers/esm/typeof.js";import{formatMuiErrorMessage as _formatMuiErrorMessage}from"c:\\node_modules\\@material-ui\\utils\\esm\\index.js";import React from"c:\\node_modules\\react\\index.js";import{isFragment}from"c:\\node_modules\\react-is\\index.js";import PropTypes from"c:\\node_modules\\prop-types\\index.js";import clsx from"c:\\node_modules\\clsx\\dist\\clsx.m.js";import ownerDocument from"/node_modules/@material-ui/core/esm/utils/ownerDocument.js";import capitalize from"/node_modules/@material-ui/core/esm/utils/capitalize.js";import{refType}from"c:\\node_modules\\@material-ui\\utils\\esm\\index.js";import Menu from"/node_modules/@material-ui/core/esm/Menu/Menu.js";import{isFilled}from"/node_modules/@material-ui/core/esm/InputBase/utils.js";import useForkRef from"/node_modules/@material-ui/core/esm/utils/useForkRef.js";import useControlled from"/node_modules/@material-ui/core/esm/utils/useControlled.js";function areEqualValues(a,b){return"object"===_typeof(b)&&null!==b?a===b:a+""===b+""}function isEmpty(display){return null==display||"string"==typeof display&&!display.trim()}var SelectInput=React.forwardRef(function SelectInput(props,ref){var ariaLabel=props["aria-label"],autoFocus=props.autoFocus,autoWidth=props.autoWidth,children=props.children,classes=props.classes,className=props.className,defaultValue=props.defaultValue,disabled=props.disabled,displayEmpty=props.displayEmpty,IconComponent=props.IconComponent,inputRefProp=props.inputRef,labelId=props.labelId,_props$MenuProps=props.MenuProps,MenuProps=void 0===_props$MenuProps?{}:_props$MenuProps,multiple=props.multiple,name=props.name,onBlur=props.onBlur,onChange=props.onChange,onClose=props.onClose,onFocus=props.onFocus,onOpen=props.onOpen,openProp=props.open,readOnly=props.readOnly,renderValue=props.renderValue,_props$SelectDisplayP=props.SelectDisplayProps,SelectDisplayProps=void 0===_props$SelectDisplayP?{}:_props$SelectDisplayP,tabIndexProp=props.tabIndex,type=props.type,valueProp=props.value,_props$variant=props.variant,variant=void 0===_props$variant?"standard":_props$variant,other=_objectWithoutProperties(props,["aria-label","autoFocus","autoWidth","children","classes","className","defaultValue","disabled","displayEmpty","IconComponent","inputRef","labelId","MenuProps","multiple","name","onBlur","onChange","onClose","onFocus","onOpen","open","readOnly","renderValue","SelectDisplayProps","tabIndex","type","value","variant"]),_useControlled=useControlled({controlled:valueProp,default:defaultValue,name:"Select"}),_useControlled2=_slicedToArray(_useControlled,2),value=_useControlled2[0],setValue=_useControlled2[1],inputRef=React.useRef(null),_React$useState=React.useState(null),displayNode=_React$useState[0],setDisplayNode=_React$useState[1],_React$useRef=React.useRef(null!=openProp),isOpenControlled=_React$useRef.current,_React$useState2=React.useState(),menuMinWidthState=_React$useState2[0],setMenuMinWidthState=_React$useState2[1],_React$useState3=React.useState(!1),openState=_React$useState3[0],setOpenState=_React$useState3[1],handleRef=useForkRef(ref,inputRefProp);React.useImperativeHandle(handleRef,function(){return{focus:function focus(){displayNode.focus()},node:inputRef.current,value:value}},[displayNode,value]),React.useEffect(function(){autoFocus&&displayNode&&displayNode.focus()},[autoFocus,displayNode]),React.useEffect(function(){if(displayNode){var label=ownerDocument(displayNode).getElementById(labelId);if(label){var handler=function handler(){getSelection().isCollapsed&&displayNode.focus()};return label.addEventListener("click",handler),function(){label.removeEventListener("click",handler)}}}},[labelId,displayNode]);var update=function update(open,event){open?onOpen&&onOpen(event):onClose&&onClose(event),isOpenControlled||(setMenuMinWidthState(autoWidth?null:displayNode.clientWidth),setOpenState(open))},childrenArray=React.Children.toArray(children),handleItemClick=function handleItemClick(child){return function(event){multiple||update(!1,event);var newValue;if(multiple){newValue=Array.isArray(value)?value.slice():[];var itemIndex=value.indexOf(child.props.value);-1===itemIndex?newValue.push(child.props.value):newValue.splice(itemIndex,1)}else newValue=child.props.value;child.props.onClick&&child.props.onClick(event);value===newValue||(setValue(newValue),onChange&&(event.persist(),Object.defineProperty(event,"target",{writable:!0,value:{value:newValue,name:name}}),onChange(event,child)))}},open=null!==displayNode&&(isOpenControlled?openProp:openState);delete other["aria-invalid"];var display,displaySingle,displayMultiple=[],computeDisplay=!1;(isFilled({value:value})||displayEmpty)&&(renderValue?display=renderValue(value):computeDisplay=!0);var items=childrenArray.map(function(child){if(!React.isValidElement(child))return null;var selected;if(multiple){if(!Array.isArray(value))throw new Error(_formatMuiErrorMessage(2));selected=value.some(function(v){return areEqualValues(v,child.props.value)}),selected&&computeDisplay&&displayMultiple.push(child.props.children)}else selected=areEqualValues(value,child.props.value),selected&&computeDisplay&&(displaySingle=child.props.children);return selected,React.cloneElement(child,{"aria-selected":selected?"true":void 0,onClick:handleItemClick(child),onKeyUp:function onKeyUp(event){" "===event.key&&event.preventDefault(),child.props.onKeyUp&&child.props.onKeyUp(event)},role:"option",selected:selected,value:void 0,"data-value":child.props.value})});computeDisplay&&(display=multiple?displayMultiple.join(", "):displaySingle);var menuMinWidth=menuMinWidthState;!autoWidth&&isOpenControlled&&displayNode&&(menuMinWidth=displayNode.clientWidth);var tabIndex;tabIndex="undefined"==typeof tabIndexProp?disabled?null:0:tabIndexProp;var buttonId=SelectDisplayProps.id||(name?"mui-component-select-".concat(name):void 0);return React.createElement(React.Fragment,null,React.createElement("div",_extends({className:clsx(classes.root,classes.select,classes.selectMenu,classes[variant],className,disabled&&classes.disabled),ref:setDisplayNode,tabIndex:tabIndex,role:"button","aria-disabled":disabled?"true":void 0,"aria-expanded":open?"true":void 0,"aria-haspopup":"listbox","aria-label":ariaLabel,"aria-labelledby":[labelId,buttonId].filter(Boolean).join(" ")||void 0,onKeyDown:function handleKeyDown(event){readOnly||-1===[" ","ArrowUp","ArrowDown","Enter"].indexOf(event.key)||(event.preventDefault(),update(!0,event))},onMouseDown:disabled||readOnly?null:function handleMouseDown(event){0!==event.button||(event.preventDefault(),displayNode.focus(),update(!0,event))},onBlur:function handleBlur(event){!open&&onBlur&&(event.persist(),Object.defineProperty(event,"target",{writable:!0,value:{value:value,name:name}}),onBlur(event))},onFocus:onFocus},SelectDisplayProps,{id:buttonId}),isEmpty(display)?React.createElement("span",{dangerouslySetInnerHTML:{__html:"&#8203;"}}):display),React.createElement("input",_extends({value:Array.isArray(value)?value.join(","):value,name:name,ref:inputRef,"aria-hidden":!0,onChange:function handleChange(event){var index=childrenArray.map(function(child){return child.props.value}).indexOf(event.target.value);if(-1!==index){var child=childrenArray[index];setValue(child.props.value),onChange&&onChange(event,child)}},tabIndex:-1,className:classes.nativeInput,autoFocus:autoFocus},other)),React.createElement(IconComponent,{className:clsx(classes.icon,classes["icon".concat(capitalize(variant))],open&&classes.iconOpen,disabled&&classes.disabled)}),React.createElement(Menu,_extends({id:"menu-".concat(name||""),anchorEl:displayNode,open:open,onClose:function handleClose(event){update(!1,event)}},MenuProps,{MenuListProps:_extends({"aria-labelledby":labelId,role:"listbox",disableListWrap:!0},MenuProps.MenuListProps),PaperProps:_extends({},MenuProps.PaperProps,{style:_extends({minWidth:menuMinWidth},null==MenuProps.PaperProps?null:MenuProps.PaperProps.style)})}),items))});void 0;export default SelectInput;