import"/node_modules/core-js/modules/es.number.to-fixed.js";import"/node_modules/core-js/modules/es.string.match.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";export function isUnitless(value){return(parseFloat(value)+"").length===(value+"").length}export function getUnit(input){return(input+"").match(/[\d.\-+]*\s*(.*)/)[1]||""}export function toUnitless(length){return parseFloat(length)}export function convertLength(baseFontSize){return function(length,toUnit){var fromUnit=getUnit(length);if(fromUnit===toUnit)return length;var pxLength=toUnitless(length);if("px"!==fromUnit)if("em"===fromUnit)pxLength=toUnitless(length)*toUnitless(baseFontSize);else if("rem"===fromUnit)return pxLength=toUnitless(length)*toUnitless(baseFontSize),length;var outputLength=pxLength;if("px"!==toUnit)if("em"===toUnit)outputLength=pxLength/toUnitless(baseFontSize);else if("rem"===toUnit)outputLength=pxLength/toUnitless(baseFontSize);else return length;return parseFloat(outputLength.toFixed(5))+toUnit}}export function alignProperty(_ref){var size=_ref.size,grid=_ref.grid,sizeBelow=size-size%grid,sizeAbove=sizeBelow+grid;return size-sizeBelow<sizeAbove-size?sizeBelow:sizeAbove}export function fontGrid(_ref2){var lineHeight=_ref2.lineHeight,pixels=_ref2.pixels,htmlFontSize=_ref2.htmlFontSize;return pixels/(lineHeight*htmlFontSize)}export function responsiveProperty(_ref3){var cssProperty=_ref3.cssProperty,min=_ref3.min,max=_ref3.max,_ref3$unit=_ref3.unit,unit=void 0===_ref3$unit?"rem":_ref3$unit,_ref3$breakpoints=_ref3.breakpoints,breakpoints=void 0===_ref3$breakpoints?[600,960,1280]:_ref3$breakpoints,_ref3$transform=_ref3.transform,transform=void 0===_ref3$transform?null:_ref3$transform,output=_defineProperty({},cssProperty,"".concat(min).concat(unit)),factor=(max-min)/breakpoints[breakpoints.length-1];return breakpoints.forEach(function(breakpoint){var value=min+factor*breakpoint;null!==transform&&(value=transform(value)),output["@media (min-width:".concat(breakpoint,"px)")]=_defineProperty({},cssProperty,"".concat(Math.round(1e4*value)/1e4).concat(unit))}),output}