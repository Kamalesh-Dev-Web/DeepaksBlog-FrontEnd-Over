import"/node_modules/core-js/modules/es.string.match.js";import _typeof from"/node_modules/@babel/runtime/helpers/esm/typeof.js";import{ForwardRef,Memo}from"c:\\node_modules\\react-is\\index.js";var fnNameMatchRegex=/^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;export function getFunctionName(fn){var match="".concat(fn).match(fnNameMatchRegex),name=match&&match[1];return name||""}function getFunctionComponentName(Component){var fallback=1<arguments.length&&arguments[1]!==void 0?arguments[1]:"";return Component.displayName||Component.name||getFunctionName(Component)||fallback}function getWrappedName(outerType,innerType,wrapperName){var functionName=getFunctionComponentName(innerType);return outerType.displayName||(""===functionName?wrapperName:"".concat(wrapperName,"(").concat(functionName,")"))}export default function getDisplayName(Component){if(null!=Component){if("string"==typeof Component)return Component;if("function"==typeof Component)return getFunctionComponentName(Component,"Component");if("object"===_typeof(Component))switch(Component.$$typeof){case ForwardRef:return getWrappedName(Component,Component.render,"ForwardRef");case Memo:return getWrappedName(Component,Component.type,"memo");default:return;}}}