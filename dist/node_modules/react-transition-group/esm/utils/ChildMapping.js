import{Children,cloneElement,isValidElement}from"c:\\node_modules\\react\\index.js";export function getChildMapping(children,mapFn){var mapper=function mapper(child){return mapFn&&isValidElement(child)?mapFn(child):child},result=Object.create(null);return children&&Children.map(children,function(c){return c}).forEach(function(child){result[child.key]=mapper(child)}),result}export function mergeChildMappings(prev,next){function getValueForKey(key){return key in next?next[key]:prev[key]}prev=prev||{},next=next||{};var nextKeysPending=Object.create(null),pendingKeys=[];for(var prevKey in prev)prevKey in next?pendingKeys.length&&(nextKeysPending[prevKey]=pendingKeys,pendingKeys=[]):pendingKeys.push(prevKey);var i,childMapping={};for(var nextKey in next){if(nextKeysPending[nextKey])for(i=0;i<nextKeysPending[nextKey].length;i++){var pendingNextKey=nextKeysPending[nextKey][i];childMapping[nextKeysPending[nextKey][i]]=getValueForKey(pendingNextKey)}childMapping[nextKey]=getValueForKey(nextKey)}for(i=0;i<pendingKeys.length;i++)childMapping[pendingKeys[i]]=getValueForKey(pendingKeys[i]);return childMapping}function getProp(child,prop,props){return null==props[prop]?child.props[prop]:props[prop]}export function getInitialChildMapping(props,onExited){return getChildMapping(props.children,function(child){return cloneElement(child,{onExited:onExited.bind(null,child),in:!0,appear:getProp(child,"appear",props),enter:getProp(child,"enter",props),exit:getProp(child,"exit",props)})})}export function getNextChildMapping(nextProps,prevChildMapping,onExited){var nextChildMapping=getChildMapping(nextProps.children),children=mergeChildMappings(prevChildMapping,nextChildMapping);return Object.keys(children).forEach(function(key){var child=children[key];if(isValidElement(child)){var hasPrev=(key in prevChildMapping),hasNext=(key in nextChildMapping),prevChild=prevChildMapping[key],isLeaving=isValidElement(prevChild)&&!prevChild.props.in;hasNext&&(!hasPrev||isLeaving)?children[key]=cloneElement(child,{onExited:onExited.bind(null,child),in:!0,exit:getProp(child,"exit",nextProps),enter:getProp(child,"enter",nextProps)}):hasNext||!hasPrev||isLeaving?hasNext&&hasPrev&&isValidElement(prevChild)&&(children[key]=cloneElement(child,{onExited:onExited.bind(null,child),in:prevChild.props.in,exit:getProp(child,"exit",nextProps),enter:getProp(child,"enter",nextProps)})):children[key]=cloneElement(child,{in:!1})}}),children}