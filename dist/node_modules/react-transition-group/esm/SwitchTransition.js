import _inheritsLoose from"/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js";var _leaveRenders,_enterRenders;import React from"c:\\node_modules\\react\\index.js";import PropTypes from"c:\\node_modules\\prop-types\\index.js";import{ENTERED,ENTERING,EXITING}from"/node_modules/react-transition-group/esm/Transition.js";import TransitionGroupContext from"/node_modules/react-transition-group/esm/TransitionGroupContext.js";function areChildrenDifferent(oldChildren,newChildren){return oldChildren!==newChildren&&!(React.isValidElement(oldChildren)&&React.isValidElement(newChildren)&&null!=oldChildren.key&&oldChildren.key===newChildren.key)}export var modes={out:"out-in",in:"in-out"};var callHook=function callHook(element,name,cb){return function(){var _element$props;element.props[name]&&(_element$props=element.props)[name].apply(_element$props,arguments),cb()}},leaveRenders=(_leaveRenders={},_leaveRenders[modes.out]=function(_ref){var current=_ref.current,changeState=_ref.changeState;return React.cloneElement(current,{in:!1,onExited:callHook(current,"onExited",function(){changeState(ENTERING,null)})})},_leaveRenders[modes.in]=function(_ref2){var current=_ref2.current,changeState=_ref2.changeState,children=_ref2.children;return[current,React.cloneElement(children,{in:!0,onEntered:callHook(children,"onEntered",function(){changeState(ENTERING)})})]},_leaveRenders),enterRenders=(_enterRenders={},_enterRenders[modes.out]=function(_ref3){var children=_ref3.children,changeState=_ref3.changeState;return React.cloneElement(children,{in:!0,onEntered:callHook(children,"onEntered",function(){changeState(ENTERED,React.cloneElement(children,{in:!0}))})})},_enterRenders[modes.in]=function(_ref4){var current=_ref4.current,children=_ref4.children,changeState=_ref4.changeState;return[React.cloneElement(current,{in:!1,onExited:callHook(current,"onExited",function(){changeState(ENTERED,React.cloneElement(children,{in:!0}))})}),React.cloneElement(children,{in:!0})]},_enterRenders),SwitchTransition=function(_React$Component){function SwitchTransition(){for(var _this,_len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _this=_React$Component.call.apply(_React$Component,[this].concat(args))||this,_this.state={status:ENTERED,current:null},_this.appeared=!1,_this.changeState=function(status,current){void 0===current&&(current=_this.state.current),_this.setState({status:status,current:current})},_this}_inheritsLoose(SwitchTransition,_React$Component);var _proto=SwitchTransition.prototype;return _proto.componentDidMount=function componentDidMount(){this.appeared=!0},SwitchTransition.getDerivedStateFromProps=function getDerivedStateFromProps(props,state){return null==props.children?{current:null}:state.status===ENTERING&&props.mode===modes.in?{status:ENTERING}:state.current&&areChildrenDifferent(state.current,props.children)?{status:EXITING}:{current:React.cloneElement(props.children,{in:!0})}},_proto.render=function render(){var component,_this$props=this.props,children=_this$props.children,mode=_this$props.mode,_this$state=this.state,status=_this$state.status,current=_this$state.current,data={children:children,current:current,changeState:this.changeState,status:status};return status===ENTERING?component=enterRenders[mode](data):status===EXITING?component=leaveRenders[mode](data):status===ENTERED?component=current:void 0,React.createElement(TransitionGroupContext.Provider,{value:{isMounting:!this.appeared}},component)},SwitchTransition}(React.Component);SwitchTransition.propTypes={},SwitchTransition.defaultProps={mode:modes.out};export default SwitchTransition;